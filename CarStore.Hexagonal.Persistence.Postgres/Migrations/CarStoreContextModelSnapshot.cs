// <auto-generated />
using System;
using CarStore.Hexagonal.Persistence.Postgres.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CarStore.Hexagonal.Persistence.Postgres.Migrations
{
    [DbContext(typeof(CarStoreContext))]
    partial class CarStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CarStore.Hexagonal.Persistence.Postgres.Entities.CarEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("character(36)")
                        .HasColumnName("car_id")
                        .IsFixedLength();

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("make");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("model");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("character varying(17)")
                        .HasColumnName("vin");

                    b.HasKey("Id");

                    b.HasIndex("Vin")
                        .IsUnique();

                    b.ToTable("cars", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000011",
                            Make = "Toyota",
                            Model = "Corolla",
                            Price = 15000.00m,
                            Vin = "JH4KA8260MC000001"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000012",
                            Make = "Honda",
                            Model = "Civic",
                            Price = 15500.00m,
                            Vin = "JH4KA8260MC000002"
                        });
                });

            modelBuilder.Entity("CarStore.Hexagonal.Persistence.Postgres.Entities.ListingEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("character(36)")
                        .HasColumnName("listing_id")
                        .IsFixedLength();

                    b.Property<string>("CarId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("character(36)")
                        .HasColumnName("car_id")
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("DealerId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("character(36)")
                        .HasColumnName("dealer_id")
                        .IsFixedLength();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("description");

                    b.Property<decimal>("ListedPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("listed_price");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.HasIndex("DealerId");

                    b.ToTable("listings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000021",
                            CarId = "00000000-0000-0000-0000-000000000011",
                            CreatedAt = new DateTime(2025, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            DealerId = "00000000-0000-0000-0000-000000000001",
                            Description = "Vehicle in excellent condition, meticulously maintained by a single owner, no issues.",
                            ListedPrice = 16000.00m,
                            Status = 0
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000022",
                            CarId = "00000000-0000-0000-0000-000000000012",
                            CreatedAt = new DateTime(2025, 1, 2, 13, 0, 0, 0, DateTimeKind.Utc),
                            DealerId = "00000000-0000-0000-0000-000000000002",
                            Description = "Exceptionally low mileage, runs and looks like new, barely used and carefully preserved.",
                            ListedPrice = 16500.00m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("CarStore.Hexagonal.Persistence.Postgres.Entities.OfferEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("character(36)")
                        .HasColumnName("offer_id")
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("character(36)")
                        .HasColumnName("customer_id")
                        .IsFixedLength();

                    b.Property<string>("ListingId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("character(36)")
                        .HasColumnName("listing_id")
                        .IsFixedLength();

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<int>("State")
                        .HasColumnType("integer")
                        .HasColumnName("state");

                    b.HasKey("Id");

                    b.HasIndex("ListingId");

                    b.HasIndex("CustomerId", "CreatedAt")
                        .IsUnique()
                        .IsDescending()
                        .HasDatabaseName("customers_offer_descending");

                    b.ToTable("offers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000031",
                            CreatedAt = new DateTime(2025, 1, 3, 10, 0, 0, 0, DateTimeKind.Utc),
                            CustomerId = "00000000-0000-0000-0000-000000000002",
                            ListingId = "00000000-0000-0000-0000-000000000021",
                            Price = 15800.00m,
                            State = 0
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000032",
                            CreatedAt = new DateTime(2025, 1, 4, 11, 0, 0, 0, DateTimeKind.Utc),
                            CustomerId = "00000000-0000-0000-0000-000000000001",
                            ListingId = "00000000-0000-0000-0000-000000000022",
                            Price = 16200.00m,
                            State = 0
                        });
                });

            modelBuilder.Entity("CarStore.Hexagonal.Persistence.Postgres.Entities.TestDriveRequestEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("character(36)")
                        .HasColumnName("test_drive_requests_id")
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("character(36)")
                        .HasColumnName("customer_id")
                        .IsFixedLength();

                    b.Property<bool>("IsApproved")
                        .HasColumnType("boolean")
                        .HasColumnName("is_approved");

                    b.Property<string>("ListingId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("character(36)")
                        .HasColumnName("listing_id")
                        .IsFixedLength();

                    b.Property<DateTime>("RequestedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("requested_date");

                    b.HasKey("Id");

                    b.HasIndex("ListingId");

                    b.HasIndex("CustomerId", "CreatedAt")
                        .IsUnique()
                        .IsDescending()
                        .HasDatabaseName("customers_request_descending");

                    b.ToTable("test_drive_requests", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000041",
                            CreatedAt = new DateTime(2025, 1, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            CustomerId = "00000000-0000-0000-0000-000000000002",
                            IsApproved = false,
                            ListingId = "00000000-0000-0000-0000-000000000021",
                            RequestedDate = new DateTime(2025, 1, 10, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000042",
                            CreatedAt = new DateTime(2025, 1, 6, 15, 0, 0, 0, DateTimeKind.Utc),
                            CustomerId = "00000000-0000-0000-0000-000000000001",
                            IsApproved = false,
                            ListingId = "00000000-0000-0000-0000-000000000022",
                            RequestedDate = new DateTime(2025, 1, 11, 13, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("CarStore.Hexagonal.Persistence.Postgres.Entities.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("character(36)")
                        .HasColumnName("user_id")
                        .IsFixedLength();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000001",
                            Email = "alice@example.com",
                            FullName = "Alice Johnson"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000002",
                            Email = "bob.smith@example.com",
                            FullName = "Bob Smith"
                        });
                });

            modelBuilder.Entity("CarStore.Hexagonal.Persistence.Postgres.Entities.ListingEntity", b =>
                {
                    b.HasOne("CarStore.Hexagonal.Persistence.Postgres.Entities.CarEntity", "Car")
                        .WithOne("Listing")
                        .HasForeignKey("CarStore.Hexagonal.Persistence.Postgres.Entities.ListingEntity", "CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_car_listing");

                    b.HasOne("CarStore.Hexagonal.Persistence.Postgres.Entities.UserEntity", "Dealer")
                        .WithMany("Listings")
                        .HasForeignKey("DealerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_listing_dealer");

                    b.Navigation("Car");

                    b.Navigation("Dealer");
                });

            modelBuilder.Entity("CarStore.Hexagonal.Persistence.Postgres.Entities.OfferEntity", b =>
                {
                    b.HasOne("CarStore.Hexagonal.Persistence.Postgres.Entities.UserEntity", "Customer")
                        .WithMany("Offers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_offer_customer");

                    b.HasOne("CarStore.Hexagonal.Persistence.Postgres.Entities.ListingEntity", "Listing")
                        .WithMany("Offers")
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_offer_listing");

                    b.Navigation("Customer");

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("CarStore.Hexagonal.Persistence.Postgres.Entities.TestDriveRequestEntity", b =>
                {
                    b.HasOne("CarStore.Hexagonal.Persistence.Postgres.Entities.UserEntity", "Customer")
                        .WithMany("TestDriveRequests")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_test_drive_customer");

                    b.HasOne("CarStore.Hexagonal.Persistence.Postgres.Entities.ListingEntity", "Listing")
                        .WithMany("TestDrives")
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_test_drive_listing");

                    b.Navigation("Customer");

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("CarStore.Hexagonal.Persistence.Postgres.Entities.CarEntity", b =>
                {
                    b.Navigation("Listing");
                });

            modelBuilder.Entity("CarStore.Hexagonal.Persistence.Postgres.Entities.ListingEntity", b =>
                {
                    b.Navigation("Offers");

                    b.Navigation("TestDrives");
                });

            modelBuilder.Entity("CarStore.Hexagonal.Persistence.Postgres.Entities.UserEntity", b =>
                {
                    b.Navigation("Listings");

                    b.Navigation("Offers");

                    b.Navigation("TestDriveRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
